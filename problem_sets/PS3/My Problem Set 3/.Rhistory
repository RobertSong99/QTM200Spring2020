qplot(gdpPercap, lifeExp, data = new_gap)
```
```{r}
new_gap <- filter(gapminder, year == 1952)
new_new_gap <- mutate(new_gap, log_gdp = log(gdpPercap))
new_new_gap
qplot(log_gdp, lifeExp, data = new_new_gap)
```
---
title: "9-27-19 Notes"
author: "Robert Song"
date: "9/27/2019"
output: html_document
---library(tidyverse
library(nycflights))
```{r}
library(tidyverse)
library(nycflights13)
library(gapminder)
```
#Filter
### Combining Conditions
-& is for "AND"
-| is for "OR"
-! is for "NOT"
```{r}
fliter(flights, month==3 & day ==4)
```
#empty data frame, cannot do double "AND"
```{r}
filter(flights, month==3 & month==4)
```
```{r}
filter(flights, month==3 | month==4)
```
### A shortcut
```{r}
filter(flights, month==1 | month==2 | month==3 | month==4 | month==5)
```
-'%in%
```{r}
filter(flights, month %in% 1:5)
```
##Filter + plotting
```{r}
#line plot of evolution through time of life exp for China, India, and Brazil
gapminder
new_gap<-filter(gapminder, country %in% c("China", "Indian", "Brazil"))
new_gap
qplot(year, lifeExp, data = new_gap, geom = 'line', color = country)
```
#Missing values
```{r}
NA
```
```{r}
NA==6
```
```{r}
NA>1345
```
```{r}
mean(c(1,2,3,4))
```
```{r}
mean(c(1,2,3,4, NA))
```
```{r}
mean(c(1,2,3,4,NA), na.rm = TRUE)
```
```{r}
starwars
```
```{r}
filter(starwars, hair_color == NA)
```
```{r}
NA==NA
```
```{r}
filter(starwars, is.na(hair_color))
```
```{r}
filter(starwars, hair_color == "none" | is.na(hair_color))
```
#Mutate
```{r}
flights
```
```{r}
mutate(flights, in_flight_gain = dep_delay - arr_delay)
```
```{r}
mutate(flights, air_time_hours = air_time/60)
```
```{r}
mutate(flights, mean_dist = distance/mean(distance))
```
##Application of mutate
```{r}
# gdpPercap v. lifeExp for year 1952
new_gap <- filter(gapminder, year == 1952)
qplot(gdpPercap, lifeExp, data = new_gap)
```
```{r}
new_gap <- filter(gapminder, year == 1952 & country == "Kuwait")
qplot(gdpPercap, lifeExp, data = new_gap)
```
```{r}
new_gap <- filter(gapminder, year == 1952 & gdpPercap <90000)
qplot(gdpPercap, lifeExp, data = new_gap)
```
```{r}
new_gap <- filter(gapminder, year == 1952)
new_new_gap <- mutate(new_gap, log_gdp = log(gdpPercap))
new_new_gap
qplot(log_gdp, lifeExp, data = new_new_gap)
```
#Piping
```{r}
```
1 %>% sum(2,3,4)
sum(1,3) %>% mean (1)
new_gap <- gapminder %>%
filter(year ==1952) %>%
mutate(log_gdp = log(gdpPercap))
#Graphing
qplot(log_gdp, lifeExp, data = new_new_gap)
```
install.packages(tidyverse)
install.packages("tidyverse")
### Interpretation
1: It seems at even low population densities, the distribution of poverty levels varies quite a bit more than the more separated population densities. It’s hard to interpret correctly, as indicated in the question with the scalar quantities being difficult to read, but it could be due to more people who struggle who live in the metropolitan area, attempting to obtain jobs, or who are unemployed, ultimately leading to more poverty levels. Whereas if one lives in the rural/suburb areas, to be able to live in those areas, it takes more to sustain properly (through distance and land as examples).
"1: It seems at even low population densities, the distribution of poverty levels varies quite a bit more than the more separated population densities. It’s hard to interpret correctly, as indicated in the question with the scalar quantities being difficult to read, but it could be due to more people who struggle who live in the metropolitan area, attempting to obtain jobs, or who are unemployed, ultimately leading to more poverty levels. Whereas if one lives in the rural/suburb areas, to be able to live in those areas, it takes more to sustain properly (through distance and land as examples)."
setwd("~/GitHub/QTM200Spring2020/problem_sets/PS3/My Problem Set 3")
library(tidyverse)
incumbents <- read.csv("~/GitHub/QTM200Spring2020/problem_sets/PS3/My Problem Set 3/incumbents_subset.csv")
View(incumbents)
difflog <- select(incumbents, difflog)
voteshare <- select(incumbents, voteshare)
diff_vote <- lm(voteshare ~ difflog, data = incumbents)
diff_vote
plot(diff_vote)
pdf("plot_Q1_1.pdf")
plot_resid <- ggplot(data = incumbents, aes(difflog, voteshare)) +
geom_point(alpha=I(.3)) +
geom_point(aes(y=incumbents$predicted), alpha = I(.1), color = "red") +
geom_segment(aes(xend=difflog, yend=incumbents$predicted), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_resid
dev.off()
plot_resid <- ggplot(data = incumbents, aes(difflog, voteshare)) +
geom_point(alpha=I(.3)) +
geom_point(aes(y=incumbents$predicted), alpha = I(.1), color = "red") +
geom_segment(aes(xend=difflog, yend=incumbents$predicted), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_resid
plot_resid <- ggplot(data = incumbents, aes(difflog, voteshare)) +
geom_point(alpha=I(.3)) +
geom_point(aes(y=predicted), alpha = I(.1), color = "red") +
geom_segment(aes(xend=difflog, yend=incumbents$predicted), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_resid
plot_resid <- ggplot(data = incumbents, aes(difflog, voteshare)) +
geom_point(alpha=I(.3)) +
geom_point(aes(y=predicted), alpha = I(.1), color = "red") +
geom_segment(aes(xend=difflog, yend=predicted), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_resid
plot_resid <- ggplot(data = incumbents, aes(difflog, voteshare)) +
geom_point(alpha=I(.3)) +
geom_point(aes(y=incumbents$predicted), alpha = I(.1), color = "red") +
geom_segment(aes(xend=difflog, yend=incumbents$predicted), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_resid
plot_resid <- ggplot(data = incumbents, aes(difflog, voteshare)) +
geom_point(alpha=I(.3)) +
geom_segment(aes(xend=difflog, yend=incumbents$predicted), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_resid
incumbents_predicted <- predict(diff_vote)
incumbents_resid <- residuals(diff_vote)
plot_resid <- ggplot(data = incumbents, aes(difflog, voteshare)) +
geom_point(alpha=I(.3)) +
geom_point(aes(y=incumbents_predicted), alpha = I(.1), color = "red") +
geom_segment(aes(xend=difflog, yend = incumbents_predicted), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_resid
pdf("plot_Q1_1.pdf")
plot_resid <- ggplot(data = incumbents, aes(difflog, voteshare)) +
geom_point(alpha=I(.3)) +
geom_point(aes(y=incumbents_predicted), alpha = I(.1), color = "red") +
geom_segment(aes(xend=difflog, yend = incumbents_predicted), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_resid
dev.off()
pdf("plot_Q1_2.pdf")
plot(incumbents$difflog, incumbents$voteshare, main="Voteshare Vs. DiffLog",
xlab="Difflog", ylab="Voteshare")
abline(diff_vote)
dev.off()
plot(incumbents$difflog, incumbents$voteshare, main="Voteshare Vs. DiffLog",
xlab="Difflog", ylab="Voteshare")
abline(diff_vote)
###Part 4###
summary(diff_vote)
presvote <- select(incumbents, presvote)
presvote
presvote_diff <- lm(presvote ~ difflog, data = incumbents)
presvote_diff
plot(presvote_diff)
plot_resid_presvote <- ggplot(data = incumbents, aes(difflog, presvote)) +
geom_point(alpha=I(.2)) +
geom_point(aes(y=incumbents_predictedpresvote), alpha = I(.05), color = "red") +
geom_segment(aes(xend=difflog, yend=incumbents_predictedpresvote), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_resid_presvote
incumbents_predictedpresvote <- predict(prevote_diff)
incumbents$presvote_resid <- residuals(presvote_diff)
incumbents_predicted_presvote <- predict(presvote_diff)
incumbents$presvote_resid <- residuals(presvote_diff)
plot_resid_presvote <- ggplot(data = incumbents, aes(difflog, presvote)) +
geom_point(alpha=I(.2)) +
geom_point(aes(y=incumbents_predicted_presvote), alpha = I(.05), color = "red") +
geom_segment(aes(xend=difflog, yend=incumbents_predicted_presvote), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_resid_presvote
plot_resid <- ggplot(data = incumbents, aes(difflog, voteshare)) +
geom_point(alpha=I(.3)) +
geom_point(aes(y=incumbents_predicted), alpha = I(.1), color = "red") +
geom_segment(aes(xend=difflog, yend = incumbents_predicted), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_resid
pdf("plot_Q2_1.pdf")
plot_resid_presvote <- ggplot(data = incumbents, aes(difflog, presvote)) +
geom_point(alpha=I(.3)) +
geom_point(aes(y=incumbents_predicted_presvote), alpha = I(.1), color = "red") +
geom_segment(aes(xend=difflog, yend=incumbents_predicted_presvote), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_resid_presvote
dev.off()
plot_residual <- ggplot(data = incumbents, aes(difflog, voteshare)) +
geom_point(alpha=I(.3)) +
geom_point(aes(y=incumbents_resid), alpha = I(.1), color = "red") +
geom_segment(aes(xend=difflog, yend = incumbents_resid), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_residual
incumbents_presvote_resid <- residuals(presvote_diff)
plot(incumbents$difflog, incumbents$presvote, main="Presvote Vs. DiffLog",
xlab="Difflog", ylab="Presvote")
abline(diff_vote)
plot_presvote <- ggplot(data = incumbents, aes(difflog, presvote)) +
geom_point(alpha=I(.3)) +
geom_point(aes(y=incumbents_presvote_resid), alpha = I(.1), color = "red") +
geom_segment(aes(xend=difflog, yend = incumbents_presvote_resid), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_prevote
plot_presvote <- ggplot(data = incumbents, aes(difflog, presvote)) +
geom_point(alpha=I(.3)) +
geom_point(aes(y=incumbents_presvote_resid), alpha = I(.1), color = "red") +
geom_segment(aes(xend=difflog, yend = incumbents_presvote_resid), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_presvote
###Part 4####
summary(presvote_diff)
presvote <- select(incumbents, presvote)
voteshare <- select(incumbents, voteshare)
presvote_voteshare <- lm(presvote ~ voteshare, data = incumbents)
presvote_voteshare
plot(presvote_voteshare)
incumbents_predicted_presvote_voteshare <- predict(presvote_voteshare)
incumbents_resid_presvote_voteshare <- residuals(presvote_voteshare)
pdf("plot_Q3_1.pdf")
plot_presvote_voteshare <- ggplot(data = incumbents, aes(difflog, presvote)) +
geom_point(alpha=I(.3)) +
geom_point(aes(y=incumbents_predicted_presvote_voteshare), alpha = I(.1), color = "red") +
geom_segment(aes(xend=difflog, yend=incumbents_predicted_presvote_voteshare), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_presvote_voteshare
dev.off()
plot_presvote_voteshare <- ggplot(data = incumbents, aes(difflog, presvote)) +
geom_point(alpha=I(.3)) +
geom_point(aes(y=incumbents_predicted_presvote_voteshare), alpha = I(.1), color = "red") +
geom_segment(aes(xend=difflog, yend=incumbents_predicted_presvote_voteshare), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_presvote_voteshare
plot_presvote <- ggplot(data = incumbents, aes(difflog, presvote)) +
geom_point(aes(y=incumbents_presvote_resid), alpha = I(.1), color = "red") +
geom_segment(aes(xend=difflog, yend = incumbents_presvote_resid), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_presvote
plot_presvote_voteshare
plot(incumbents$voteshare, incumbents$presvote, main="Presvote Vs. Voteshare",
xlab="Voteshare", ylab="Presvote")
abline(diff_vote)
plot(incumbents$difflog, incumbents$presvote, main="Presvote Vs. DiffLog",
xlab="Difflog", ylab="Presvote")
abline(diff_vote)
### Part 3 ###
summary(presvote_voteshare)
presvote <- select(incumbents, presvote)
voteshare <- select(incumbents, voteshare)
presvote_voteshare <- lm(voteshare ~ presvote , data = incumbents)
presvote_voteshare
plot(presvote_voteshare)
plot_presvote_voteshare <- ggplot(data = incumbents, aes(presvote, voteshare)) +
geom_point(alpha=I(.3)) +
geom_point(aes(y=incumbents_predicted_presvote_voteshare), alpha = I(.1), color = "red") +
geom_segment(aes(xend=difflog, yend=incumbents_predicted_presvote_voteshare), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_presvote_voteshare
plot(presvote_voteshare)
plot_presvote_voteshare <- ggplot(data = incumbents, aes(presvote, voteshare)) +
geom_point(alpha=I(.3)) +
geom_point(aes(y=incumbents_predicted_presvote_voteshare), alpha = I(.1), color = "red") +
geom_segment(aes(xend=presvote, yend=incumbents_predicted_presvote_voteshare), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_presvote_voteshare
pdf("plot_Q3_1.pdf")
plot_presvote_voteshare <- ggplot(data = incumbents, aes(presvote, voteshare)) +
geom_point(alpha=I(.3)) +
geom_point(aes(y=incumbents_predicted_presvote_voteshare), alpha = I(.1), color = "red") +
geom_segment(aes(xend=presvote, yend=incumbents_predicted_presvote_voteshare), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_presvote_voteshare
dev.off()
pdf("plot_Q3_2.pdf")
plot(incumbents$voteshare, incumbents$presvote, main="Presvote Vs. Voteshare",
xlab="Voteshare", ylab="Presvote")
abline(diff_vote)
dev.off()
### Part 3 ###
summary(presvote_voteshare)
###Part 4####
summary(presvote_diff)
plot(incumbents$presvote, incumbents$voteshare, main="Voteshare vs Presvote",
xlab="Presvote", ylab="Voteshare")
abline(diff_vote)
###Part 2###
f
pdf("plot_Q3_2.pdf")
plot(incumbents$presvote, incumbents$voteshare, main="Voteshare vs Presvote",
xlab="Presvote", ylab="Voteshare")
abline(diff_vote)
dev.off()
### Part 3 ###
summary(presvote_voteshare)
plot_together <- ggplot(data = incumbents, aes(plot_resid, plot_resid_presvote)) +
geom_point(alpha=I(.3))+
geom_smooth(method = "lm", se = F)
plot_together
plot_together <- ggplot(data = incumbents, aes(presvote_diff, diff_vote)) +
geom_point(alpha=I(.3))+
geom_smooth(method = "lm", se = F)
plot_together
plot(incumbents_presvote_resid ,incumbents_resid, main="Residuals Explained",
xlab="Voteshare Explained", ylab="Presvote Explained")
abline(())
abline()
plot(incumbents_presvote_resid ,incumbents_resid, main="Residuals Explained",
xlab="Voteshare Explained", ylab="Presvote Explained")
abline()
plot(incumbents$difflog, incumbents$presvote, main="Presvote Vs. DiffLog",
xlab="Difflog", ylab="Presvote")
abline(presvote_diff)
plot(incumbents$presvote, incumbents$voteshare, main="Voteshare vs Presvote",
xlab="Presvote", ylab="Voteshare")
abline(presvote_voteshare)
explained_plot <- lm(incumbents_resid ~ incumbents_presvote_resid, data = incumbents)
plot(incumbents_presvote_resid ,incumbents_resid, main="Residuals Explained",
xlab="Voteshare Explained", ylab="Presvote Explained")
abline(explained_plot)
summary(explained_plot)
pdf("plot_Q4")
plot(incumbents_presvote_resid ,incumbents_resid, main="Residuals Explained",
xlab="Voteshare Explained", ylab="Presvote Explained")
abline(explained_plot)
dev.off()
summary(explained_plot)
plot(multiple_regress)
multiple_regress <- lm(voteshare ~ difflog + presvote, data = incumbents)
plot(multiple_regress)
multiple_y <- difflog + presvote
plot(incumbents$mutiple_y, incumbents$voteshare)
plot(lm(voteshare ~ difflog + presvote, data = incumbents))
plot(incumbents$presvote + incumbents$difflog, incumbents$voteshare)
explained_plot<- lm(voteshare ~ difflog + presvote, data = incumbents)
plot(incumbents$presvote + incumbents$difflog, incumbents$voteshare, main = "Voteshare Vs. Difflog + Presvote",
xlab = "Difflog + Presvote", ylab = "voteshare")
abline(explained_plot)
plot(incumbents$presvote + incumbents$difflog, incumbents$voteshare, main = "Voteshare Vs. Difflog + Presvote",
xlab = "Difflog + Presvote", ylab = "voteshare")
summary(explained_plot)
explained_plot<- lm(voteshare ~ difflog + presvote, data = incumbents)
x_explained <- incumbents$presvote + incumbents$difflog
ggplot_explained <- ggplot(data = incumbents, aes(x_explained, voteshare))+
geom_point(alpha=I(.3)) +
geom_smooth(method = "lm", se = F)
ggplot_explained
plot(incumbents_presvote_resid ,incumbents_resid, main="Residuals Explained",
xlab="Voteshare Explained", ylab="Presvote Explained")
abline(explained_plot)
explained_plot4 <- lm(incumbents_resid ~ incumbents_presvote_resid, data = incumbents)
explained_plot5<- lm(voteshare ~ difflog + presvote, data = incumbents)
x_explained5 <- incumbents$presvote + incumbents$difflog
explained_plot5<- lm(voteshare ~ difflog + presvote, data = incumbents)
x_explained5 <- incumbents$presvote + incumbents$difflog
ggplot_explained <- ggplot(data = incumbents, aes(x_explained5, voteshare))+
geom_point(alpha=I(.3)) +
geom_smooth(method = "lm", se = F)
ggplot_explained
summary(explained_plot5)
plot(incumbents_presvote_resid ,incumbents_resid, main="Residuals Explained",
xlab="Voteshare Explained", ylab="Presvote Explained")
abline(explained_plot4)
summary(explained_plot4)
summary(explained_plot5)
ggplot_explained <- ggplot(data = incumbents, aes(x_explained5, voteshare))+
geom_point(alpha=I(.3)) +
geom_smooth(method = "lm", se = F)
ggplot_explained
summary(explained_plot4)
explained_plot4 <- lm(incumbents_predicted ~ incumbents_predicted_presvote, data = incumbents)
(explained_plot4)
summary(explained_plot4)
plot(incumbents_predicted_presvote, incumbents_predicted, main="Residuals Explained",
xlab="Voteshare Explained", ylab="Presvote Explained")
abline(explained_plot4
plot(incumbents_predicted_presvote, incumbents_predicted, main="Residuals Explained",
xlab="Voteshare Explained", ylab="Presvote Explained")
abline(explained_plot4)
plot(incumbents_predicted_presvote, incumbents_predicted, main="Residuals Explained",
xlab="Voteshare Explained", ylab="Presvote Explained")
explained_graph4 <- ggplot(data = incumbents, aes(incumbents_predicted_presvote, incumbents_predicted))+
geom_point(alpha=I(.3)) +
geom_smooth(method = "lm", se = F)
explained_graph4
ggplot_explained <- ggplot(data = incumbents, aes(x_explained5, voteshare))+
geom_point(alpha=I(.3)) +
geom_smooth(method = "lm", se = F)
ggplot_explained
explained_graph4 <- ggplot(data = incumbents, aes(incumbents_predicted_presvote, incumbents_predicted))+
geom_point(alpha=I(.3)) +
geom_smooth(method = "lm", se = F)
explained_graph4
summary(explained_plot4)
summary(explained_plot5)
x_explained5 <- incumbents$presvote + incumbents$difflog
explained_plot5<- lm(voteshare ~ x_explained5, data = incumbents)
ggplot_explained <- ggplot(data = incumbents, aes(x_explained5, voteshare))+
geom_point(alpha=I(.3)) +
geom_smooth(method = "lm", se = F)
ggplot_explained
explained_graph4 <- ggplot(data = incumbents, aes(incumbents_predicted_presvote, incumbents_predicted))+
geom_point(alpha=I(.3)) +
geom_smooth(method = "lm", se = F)
explained_graph4
summary(explained_plot4)
pdf("plot_Q5")
ggplot_explained <- ggplot(data = incumbents, aes(x_explained5, voteshare))+
geom_point(alpha=I(.3)) +
geom_smooth(method = "lm", se = F)
ggplot_explained
dev.off()
summary(explained_plot5)
pdf("plot_Q5")
ggplot_explained <- ggplot(data = incumbents, aes(x_explained5, voteshare))+
geom_point(alpha=I(.3)) +
geom_smooth(method = "lm", se = F)
ggplot_explained
dev.off()
pdf("plot_Q4")
explained_graph4 <- ggplot(data = incumbents, aes(incumbents_predicted_presvote, incumbents_predicted))+
geom_point(alpha=I(.3)) +
geom_smooth(method = "lm", se = F)
explained_graph4
dev.off()
plot(diff_vote)
abline(diff_vote)
dev.off()
pdf("plot_Q2_1.pdf")
plot_resid_presvote <- ggplot(data = incumbents, aes(difflog, presvote)) +
geom_point(alpha=I(.3)) +
geom_point(aes(y=incumbents_predicted_presvote), alpha = I(.1), color = "red") +
geom_segment(aes(xend=difflog, yend=incumbents_predicted_presvote), alpha = I(.1)) +
geom_smooth(method = "lm", se = F)
plot_resid_presvote
dev.off()
###Part 2###
pdf("plot_Q2_2.pdf")
plot(incumbents$difflog, incumbents$presvote, main="Presvote Vs. DiffLog",
xlab="Difflog", ylab="Presvote")
abline(presvote_diff)
dev.off()
pdf("plot_Q4")
explained_graph4 <- ggplot(data = incumbents, aes(incumbents_predicted_presvote, incumbents_predicted))+
geom_point(alpha=I(.3)) +
geom_smooth(method = "lm", se = F)
explained_graph4
dev.off()
pdf("plot_Q4.pdf")
explained_graph4 <- ggplot(data = incumbents, aes(incumbents_predicted_presvote, incumbents_predicted))+
geom_point(alpha=I(.3)) +
geom_smooth(method = "lm", se = F)
explained_graph4
dev.off()
pdf("plot_Q5.pdf")
ggplot_explained <- ggplot(data = incumbents, aes(x_explained5, voteshare))+
geom_point(alpha=I(.3)) +
geom_smooth(method = "lm", se = F)
ggplot_explained
dev.off()
