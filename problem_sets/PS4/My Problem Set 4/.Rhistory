```
#Changing shape of plot points per type and increase size of all points
#size needs to be a numerical variable wtithing "I" parentheses
```{r}
qplot(x=diab,
y = obes,
data = diabetes,
shape = region,
color = region,
size= I(2))
```
##1.4 Structure of Function Calls
```{r}
qplot(x= gdpPercap, y = lifeExp, data = gapminder)
```
##can change the order, still will work
```{r}
qplot(data = gapminder, x = gdpPercap, y = lifeExp)
```
###unnamed arguments
```{r}
qplot(gdpPercap, lifeExp, data = gapminder)
```
```{r}
qplot(lifeExp, gdpPercap, data= gapminder)
```
```{r}
#?<NAME OF FUNCTION
?qplot
```
##1.5 Counfounding factors and facets
```{r}
qplot(gdpPercap, lifeExp, data = gapminder)
```
```{r}
qplot(pop, lifeExp, data = gapminder)
```
```{r}
qplot(gdpPercap, lifeExp, data = gapminder, facets = ~year)
```
```{r}
qplot(gdpPercap, lifeExp,
data = gapminder,
geom = c('point', 'smooth'),
facets = ~year)
```
```{r}
qplot(pop, lifeExp, data = gapminder, facets = ~year)
```
```{r}
qplot(gdpPercap, lifeExp, data = gapminder, geom = c('point', 'smooth'),facets = ~year)
```
#2. Data manipulation with dplyr
#Setup
```{r eval = FALSE}
install.packages("nycflights13")
```
```{r}
library("nycflights13")
flights
```
## 2.1 Filter
```{r}
filter(flights, month ==3)
```
```{r}
View(filter(flights, month == 3))
```
```{r}
#Second half of the month
filter(flights, day >= 15)
```
###Combining comparisons
- '&' is for "AND"
- '|' is for "OR"
- "!' is for "NOT"
```{r}
filter(flights, month == 3 & day == 4)
```
```{r}
filter(flights, ! month == 1)
filter(flights, month != 1)
```
```{r}
filter(starwars, is.na(hair-color))
```
```{r}
filter(starwars, is.na(hair_color))
```
```{r}
filter(starwars, hair_color == "black")
```
```{r}
filter(starwars, hair_color == "none" | is.na(hair_color))
```
```{r}
filter(starwars, hair_color == "none" | is.na(hair_color))
```
```{r}
flights
```
flights
mutate(flights, in_flight_gain = dep_delay - arr_delay)
mutate(flights, in_flight_gain = dep_delay - arr_delay)
install.packages(tidyverse)
install.packages("tidyverse")
mutate(flights, air_time_hours = air_time/60)
mutate(flights, air_time_hours = air_time/60)
mutate(flights, mean_dist = distance/mean(distance))
new_gap <- filter(gapminder, year == 1952)
qplot(gdpPercap, lifeExp, data = new_gap)
```{r}
library(tidyverse)
library(nycflights)
library(gapminder)
new_new_gap <- mutate(new_gap, log_gdp = log(gdpPercap))
new_new_gap
qplot(log_gdp, lifeExp, data = new_new_gap)
new_gap <- filter(gapminder, year == 1952)
new_new_gap <- mutate(new_gap, log_gdp = log(gdpPercap))
new_new_gap
qplot(log_gdp, lifeExp, data = new_new_gap)
# gdpPercap v. lifeExp for year 1952
new_gap <- filter(gapminder, year == 1952)
qplot(gdpPercap, lifeExp, data = new_gap)
```
```{r}
new_gap <- filter(gapminder, year == 1952 & country == "Kuwait")
qplot(gdpPercap, lifeExp, data = new_gap)
```
```{r}
new_gap <- filter(gapminder, year == 1952 & gdpPercap <90000)
qplot(gdpPercap, lifeExp, data = new_gap)
```
```{r}
new_gap <- filter(gapminder, year == 1952)
new_new_gap <- mutate(new_gap, log_gdp = log(gdpPercap))
new_new_gap
qplot(log_gdp, lifeExp, data = new_new_gap)
```
---
title: "9-27-19 Notes"
author: "Robert Song"
date: "9/27/2019"
output: html_document
---library(tidyverse
library(nycflights))
```{r}
library(tidyverse)
library(nycflights13)
library(gapminder)
```
#Filter
### Combining Conditions
-& is for "AND"
-| is for "OR"
-! is for "NOT"
```{r}
fliter(flights, month==3 & day ==4)
```
#empty data frame, cannot do double "AND"
```{r}
filter(flights, month==3 & month==4)
```
```{r}
filter(flights, month==3 | month==4)
```
### A shortcut
```{r}
filter(flights, month==1 | month==2 | month==3 | month==4 | month==5)
```
-'%in%
```{r}
filter(flights, month %in% 1:5)
```
##Filter + plotting
```{r}
#line plot of evolution through time of life exp for China, India, and Brazil
gapminder
new_gap<-filter(gapminder, country %in% c("China", "Indian", "Brazil"))
new_gap
qplot(year, lifeExp, data = new_gap, geom = 'line', color = country)
```
#Missing values
```{r}
NA
```
```{r}
NA==6
```
```{r}
NA>1345
```
```{r}
mean(c(1,2,3,4))
```
```{r}
mean(c(1,2,3,4, NA))
```
```{r}
mean(c(1,2,3,4,NA), na.rm = TRUE)
```
```{r}
starwars
```
```{r}
filter(starwars, hair_color == NA)
```
```{r}
NA==NA
```
```{r}
filter(starwars, is.na(hair_color))
```
```{r}
filter(starwars, hair_color == "none" | is.na(hair_color))
```
#Mutate
```{r}
flights
```
```{r}
mutate(flights, in_flight_gain = dep_delay - arr_delay)
```
```{r}
mutate(flights, air_time_hours = air_time/60)
```
```{r}
mutate(flights, mean_dist = distance/mean(distance))
```
##Application of mutate
```{r}
# gdpPercap v. lifeExp for year 1952
new_gap <- filter(gapminder, year == 1952)
qplot(gdpPercap, lifeExp, data = new_gap)
```
```{r}
new_gap <- filter(gapminder, year == 1952 & country == "Kuwait")
qplot(gdpPercap, lifeExp, data = new_gap)
```
```{r}
new_gap <- filter(gapminder, year == 1952 & gdpPercap <90000)
qplot(gdpPercap, lifeExp, data = new_gap)
```
```{r}
new_gap <- filter(gapminder, year == 1952)
new_new_gap <- mutate(new_gap, log_gdp = log(gdpPercap))
new_new_gap
qplot(log_gdp, lifeExp, data = new_new_gap)
```
#Piping
```{r}
```
1 %>% sum(2,3,4)
sum(1,3) %>% mean (1)
new_gap <- gapminder %>%
filter(year ==1952) %>%
mutate(log_gdp = log(gdpPercap))
#Graphing
qplot(log_gdp, lifeExp, data = new_new_gap)
```
install.packages(tidyverse)
install.packages("tidyverse")
### Interpretation
1: It seems at even low population densities, the distribution of poverty levels varies quite a bit more than the more separated population densities. It’s hard to interpret correctly, as indicated in the question with the scalar quantities being difficult to read, but it could be due to more people who struggle who live in the metropolitan area, attempting to obtain jobs, or who are unemployed, ultimately leading to more poverty levels. Whereas if one lives in the rural/suburb areas, to be able to live in those areas, it takes more to sustain properly (through distance and land as examples).
"1: It seems at even low population densities, the distribution of poverty levels varies quite a bit more than the more separated population densities. It’s hard to interpret correctly, as indicated in the question with the scalar quantities being difficult to read, but it could be due to more people who struggle who live in the metropolitan area, attempting to obtain jobs, or who are unemployed, ultimately leading to more poverty levels. Whereas if one lives in the rural/suburb areas, to be able to live in those areas, it takes more to sustain properly (through distance and land as examples)."
install.packages(car)
library(car)
data(Prestige)
help(Prestige)
install.packages("car")
library("car")
data("Prestige")
help("Prestige")
install.packages("car")
library("car")
data("Prestige")
help("Prestige")
install.packages("car")
setwd("~/GitHub/QTM200Spring2020/problem_sets/PS4/My Problem Set 4")
setwd("~/GitHub/QTM200Spring2020/problem_sets/PS4/My Problem Set 4")
install.packages("car")
library("car")
data("Prestige")
help("Prestige")
view(Prestige)
view("Prestige")
library('tidyverse')
view("Prestige")
view(Prestige)
data(Prestige)
help(Prestige)
install.packages(car)
view(Prestige)
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
# set wd
setwd('~/Documents/GitHub/QTM200Spring2020/labs/Lab12')
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
lapply(c("faraway"), pkgTest)
setwd("~/GitHub/QTM200Spring2020/labs/Lab11/My Lab 11")
setwd("~/GitHub/QTM200Spring2020/labs/Lab11/My Lab 11")
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
# set wd
setwd("~/GitHub/QTM200Spring2020/labs/Lab11/My Lab 11")
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
lapply(c("faraway"), pkgTest)
load("Busby_Football.RData")
colnames(x)
load("Busby_Football.RData")
setwd("~/GitHub/QTM200Spring2020/labs/Lab11/My Lab 10")
setwd("~/GitHub/QTM200Spring2020/labs/Lab10/My lab 10 work")
# set wd
setwd("~/GitHub/QTM200Spring2020/labs/Lab10/My lab 10 work")
load("Busby_Football.RData")
load("Busby_Football.RData")
colnames(x)
lm(papprove ~ Post + osu + Post:osu, data = x)
setwd("~/GitHub/QTM200Spring2020/problem_sets/PS4/My Problem Set 4")
install.packages("car")
library("car")
data(Prestige)
help(Prestige)
library('tidyverse')
view(Prestige)
prestige
summary(Prestige)
Prestige$professional <- Prestige$type
summary(Prestige)
Prestige$professional <- NULL
summary(Prestige)
prestige_data <- rename("professional" = "type")
prestige_data <- rename(professional = type, data = Prestige)
prestige_data <- rename("professional" = "type", data = Prestige)
prestige_data <- rename(data$professional = data$type)
Prestige %>% rename(professional = type)
ifelse(Prestige$professional=="prof", 1, 0)
summary(Prestige$professional)
Summary(prestige)
Summary(Prestige)
summary(Prestige)
list(Prestige$professional)
view(Prestige)
prestige_data <- ifelse(Prestige$professional=="prof", 1, 0)
view(prestige_data)
Prestige %>% ifelse(Prestige$professional=="prof", 1, 0)
setwd("~/GitHub/QTM200Spring2020/problem_sets/PS4/My Problem Set 4")
install.packages("car")
library("car")
data(Prestige)
help(Prestige)
library('tidyverse')
view(Prestige)
############# Question 1 ##################
### Part 1 ###
summary(Prestige)
Prestige %>% rename(professional = type)
install.packages("car")
summary(Prestige)
summary(Prestige)
Prestige %>% rename(professional = type)
library('tidyverse')
Prestige %>% rename(professional = type)
ifelse(Prestige$professional=="prof", 1, 0)
view(Prestige)
ifelse(Prestige$professional =="prof", 1, 0, na.rm = FALSE)
ifelse(Prestige$professional =="prof", 1, 0)
plot(professional, income, data = Prestige)
Prestige %>% rename(professional = type)
plot(professional, income, data = Prestige)
plot(Prestige$professional, Prestige$income)
lm(prestige ~ income + professional + professional:income, data = Prestige)
view(Prestige)
prestige_data<- Prestige %>% rename(professional = type)
view(prestige_data)
ifelse(prestige_data$professional =="prof", 1, 0)
ifelse(prestige_data$professional =="prof", 1, 0, na.rm=F)
ifelse(prestige_data$professional =="prof", 1, 0)
lm(prestige ~ income + professional + professional:income, data = Prestige)
lm(prestige ~ income + professional + professional:income, data = prestige_data)
### Part F ###
13.904517 + (.004023 * 1000) + (45.019022 *1) + (18.980739 * 0 - (.003178 *1000 *1) - (.002171 * 1000 *0))
### Part F ###
13.904517 + (.004023 * 1000) + (45.019022 *1) + (18.980739 * 0) - (.003178 *1000 *1) - (.002171 * 1000 *0)
### Part G ###
13.904517 + (.004023 * 6000) + (45.019022 *1) + (18.980739 * 0) - (.003178 *1000 *1) - (.002171 * 1000 *0)
13.904517 + (.004023 * 1000) + (45.019022 *0) + (18.980739 * 1) - (.003178 *1000 *0) - (.002171 * 1000 *1)
#34.74 when wc
59.769 - 34.74
#79.88354
13.904517 + (.004023 * 6000) + (45.019022 *0) + (18.980739 * 1) - (.003178 *1000 *0) - (.002171 * 1000 *1)
#54.85226
79.88354-54.85226
13.904517 + (.004023 * 0 + (45.019022 *1) + (18.980739 * 0) - (.003178 *1000 * 1) - (.002171 * 1000 *0)
13.904517 + (.004023 * 0) + (45.019022 *1) + (18.980739 * 0) - (.003178 *1000 * 1) - (.002171 * 1000 *0)
13.904517 + (.004023 * 0) + (45.019022 *1) + (18.980739 * 0) - (.003178 *1000 * 1) - (.002171 * 1000 *0)
#34.74 when income is 0
59.769 -55.74554
13.904517 + (.004023 * 0) + (45.019022 *1) + (18.980739 * 0) - (.003178 *1000 * 1) - (.002171 * 1000 *0)
13.904517 + (.004023 * 0) + (45.019022 *1) + (18.980739 * 0) - (.003178 *1000 * 0)
#55.754 when income is 0
59.769 - 58.92354
##Question 1A:
X = matrix(c(14, 7, 6, 7, 7, 1), nrow = 2, ncol = 3) #Creating matrix from problem
X #Creation of Matrix
impact_matrix = matrix(c(.042, .042, .302), nrow = 3, ncol = 1) #Creating matrix from problem
colnames(impact_matrix) <- c("Impact of lawn signs on vote share")
rownames(impact_matrix) <- c("Precinct assigned lawn signs (n=30)", "Precinct adjacent to lawn signs (n=76)", "Constant")
impact_matrix #Creation of Matrix
impact_se = matrix(c(.016, .013, .011), nrow = 3, ncol = 1) #Creating matrix from problem
colnames(impact_se) <- c("Impact of lawn signs on vote share")
rownames(impact_se) <- c("Precinct assigned lawn signs (n=30)", "Precinct adjacent to lawn signs (n=76)", "Constant")
impact_se #Creation of Matrix
matrix.t.test(impact_matrix, MARGIN = 1, n1=30, n2 = 76, pONLY = TRUE)
ttest <- matrix.t.test(impact_matrix, MARGIN = 1, n1=30, n2 = 76, pONLY = TRUE)
t_test_A <- function(m1, m2, s1, s2, n1, n2, m0=0, equal.variance = FALSE)
t_test_A <- function(m1, m2, s1, s2, n1, n2, m0=0, equal.variance = FALSE)
m1<-.042
m2 <- .302
s1 <- .016
s2 <- .011
n1 <- 30
n2 <- 131
library(BSDA)
library('BSDA')
t_test_A
t.test(t_test_A)
t.test(.042, y = NULL, alternative = c("two.sided"), mu = .302,
paired = FALSE, var.equal = FALSE, conf.level = 0.95)
(.042, y = NULL, alternative = "two.sided", mu = .302, sigma.x = NULL,
sigma.y = NULL, conf.level = 0.95)
z.test(.042, y = NULL, alternative = "two.sided", mu = .302, sigma.x = NULL,
sigma.y = NULL, conf.level = 0.95)
xbar = .042 # sample mean
mu0 = .302 # hypothesized value
sigma = .016 # population standard deviation
n = 30 # sample size
z = (xbar−mu0)/(sigma/sqrt(n))
alpha = .05
z.half.alpha = qnorm(1−alpha/2)
c(−z.half.alpha, z.half.alpha)
alpha = .05
z.half.alpha = qnorm(1−alpha/2)
c(−z.half.alpha, z.half.alpha) #from -1.96 to 1.96 for 95% CI
### Part B ###
xbar = .042 # sample mean
mu0 = .302 # hypothesized value
sigma = .013 # population standard deviation
n = 76 # sample size
z = (xbar-mu0)/(sigma/sqrt(n)) #-89.004 is the z score
xbar = .042 # sample mean
mu0 = .302 # hypothesized value
sigma = .016 # population standard deviation
n = 30 # sample size
z = (xbar-mu0)/(sigma/sqrt(n)) #-89.004 is the z score
alpha = .05
z.half.alpha = qnorm(1-alpha/2)
c(-z.half.alpha, z.half.alpha) #from -1.96 to 1.96 for 95% CI
xbar2 = .042 # sample mean
mu02 = .302 # hypothesized value
sigma2 = .013 # population standard deviation
n2 = 76 # sample size
z2 = (xbar2-mu02)/(sigma2/sqrt(n2)) #-89.004 is the z score
alpha2 = .05
z.half.alpha2 = qnorm(1-alpha2/2)
c(-z.half.alpha2, z.half.alpha2) #from -1.96 to 1.96 for 95% CI
#std = se * sqrt(n)
sigma = .016/(sqrt(30))
#std = se * sqrt(n)
sigma = .016*(sqrt(30)) #standard error
z = (xbar-mu0)/(sigma/sqrt(n)) #-89.004 is the z score
sigma2 = .013*(sqrt(76)) #standard error converted to standard deviation = .088
z2 = (xbar2-mu02)/(sigma2/sqrt(n2)) #-174.36 is the z score
### Part D ###
summary(impact_matrix)
plot(impact_matrix)
lm(impact_matrix)
lm(impact_matrix~impact_matrix)
lm(impact_matrix ~ index)
boxplot(impact_matrix)
### Part D ###
summary(impact_matrix)
plot(impact_matrix)
