setwd("~/Documents/GitHub/QTM200Spring2020/problem_sets/PS6")
#####################
# Problem 1
#####################
cholest <- read.csv("cholesterol.csv", stringsAsFactors = F, header=T)
#####################
# Problem 2
#####################
mexico_elections <- read.csv("MexicoMuniData.csv", stringsAsFactors = F, header=T)
mean(mexico_elections$marginality.06)
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("ggplot2", "car", "leaps"),  pkgTest)
# set working directory
setwd("~/Dropbox/Emory/teaching/QTM200/slides/12_17")
##############
# lecture code
##############
# import data
# case examples
judge.means <- read.csv("~/Dropbox/WashU/classes/Fall2015/MLE/replication/glynn_sen_daughters_by_judge.csv", stringsAsFactors = FALSE)
women.cases <- read.csv("~/Dropbox/WashU/classes/Fall2015/MLE/replication/glynn_sen_daughters_by_case_1.csv", stringsAsFactors = F)
#  Removing male plaintiffs:
women.cases <- subset(women.cases, femplaintiff == 1)
# Gender cases only
women.cases <- subset(women.cases, area == "employment" | area == "Title IX" |
area == "pregnancy" | area == "abortion" | area == "reproductive rights")
women.cases$area <- factor(women.cases$area, levels = c("abortion","employment", "pregnancy","reproductive rights","Title IX"))
women.subset <- subset(women.cases, child < 5 & child > 0)
women.subset$girls_atLeast1 <- as.factor(ifelse(women.subset$girls>0, 1, 0))
women.subset <- women.subset[!is.na(women.subset$girls),]
women.subset$republican <- as.factor(women.subset$republican)
# run model
judge_interaction <- glm(progressive.vote ~ girls_atLeast1 * republican,
family=binomial(link="logit"), data = women.subset)
judge_null <- glm(progressive.vote ~ 1,
family=binomial(link="logit"), data = women.subset)
anova(judge_null, judge_interaction, test ="Chisq")
judge_additive <- glm(progressive.vote ~ girls_atLeast1 + republican,
family=binomial(link="logit"), data = women.subset)
anova(judge_additive, judge_interaction, test ="Chisq")
library(ResourceSelectio)
library(ResourceSelectiom)
library(ResourceSelection)
lapply(c("ggplot2", "car", "leaps", "ResourceSelection"),  pkgTest)
hoslem.test(women.subset, fitted(judge_additive), g=10)
hoslem.test(women.subset$progressive.vote, fitted(judge_additive), g=10)
women.subset$progressive.vote
length(women.subset$progressive.vote)
length(fitted(judge_additive))
length(!is.na(women.subset$progressive.vote))
length(!is.na(women.subset$republican))
length(!is.na(women.subset$girls_atLeast1))
judge_additive <- glm(progressive.vote ~ girls_atLeast1 + republican,
family=binomial(link="logit"), data = women.subset)
summary(judge_additive)
View(women.subset)
is.na(women.subset)
is.na(women.subset[, "republican"])
which(is.na(women.subset[, "republican"]))
which(is.na(women.subset[, "girls"]))
which(is.na(women.subset[, "girls_atLeast1"]))
which(is.na(women.subset[, "progressive.vote"]))
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("ggplot2", "car", "leaps", "ResourceSelectio"),  pkgTest)
# set working directory
setwd("~/Dropbox/Emory/teaching/QTM200/slides/12_17")
##############
# lecture code
##############
# import data
# case examples
judge.means <- read.csv("~/Dropbox/WashU/classes/Fall2015/MLE/replication/glynn_sen_daughters_by_judge.csv", stringsAsFactors = FALSE)
women.cases <- read.csv("~/Dropbox/WashU/classes/Fall2015/MLE/replication/glynn_sen_daughters_by_case_1.csv", stringsAsFactors = F)
#  Removing male plaintiffs:
women.cases <- subset(women.cases, femplaintiff == 1)
# Gender cases only
women.cases <- subset(women.cases, area == "employment" | area == "Title IX" |
area == "pregnancy" | area == "abortion" | area == "reproductive rights")
women.cases$area <- factor(women.cases$area, levels = c("abortion","employment", "pregnancy","reproductive rights","Title IX"))
women.subset <- subset(women.cases, child < 5 & child > 0)
women.subset$girls_atLeast1 <- as.factor(ifelse(women.subset$girls>0, 1, 0))
women.subset <- women.subset[!is.na(women.subset$girls),]
women.subset <- women.subset[!is.na(women.subset$progressive.vote),]
women.subset$republican <- as.factor(women.subset$republican)
# run model
judge_interaction <- glm(progressive.vote ~ girls_atLeast1 * republican,
family=binomial(link="logit"), data = women.subset)
judge_null <- glm(progressive.vote ~ 1,
family=binomial(link="logit"), data = women.subset)
anova(judge_null, judge_interaction, test ="Chisq")
judge_additive <- glm(progressive.vote ~ girls_atLeast1 + republican,
family=binomial(link="logit"), data = women.subset)
anova(judge_additive, judge_interaction, test ="Chisq")
vif(judge_additive)
outlierTest(judge_additive)
influencePlot(judge_additive)
pdf("../../graphics/influencePlot_logit.pdf")
influencePlot(judge_additive)
dev.off()
hoslem.Test(women.subset$progressive.vote, fitted(judge_additive))
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("ggplot2", "car", "leaps", "ResourceSelectio"),  pkgTest)
# set working directory
setwd("~/Dropbox/Emory/teaching/QTM200/slides/12_17")
##############
# lecture code
##############
lapply(c("ggplot2", "car", "leaps", "ResourceSelection"),  pkgTest)
# import data
# case examples
judge.means <- read.csv("~/Dropbox/WashU/classes/Fall2015/MLE/replication/glynn_sen_daughters_by_judge.csv", stringsAsFactors = FALSE)
women.cases <- read.csv("~/Dropbox/WashU/classes/Fall2015/MLE/replication/glynn_sen_daughters_by_case_1.csv", stringsAsFactors = F)
#  Removing male plaintiffs:
women.cases <- subset(women.cases, femplaintiff == 1)
# Gender cases only
women.cases <- subset(women.cases, area == "employment" | area == "Title IX" |
area == "pregnancy" | area == "abortion" | area == "reproductive rights")
women.cases$area <- factor(women.cases$area, levels = c("abortion","employment", "pregnancy","reproductive rights","Title IX"))
women.subset <- subset(women.cases, child < 5 & child > 0)
women.subset$girls_atLeast1 <- as.factor(ifelse(women.subset$girls>0, 1, 0))
women.subset <- women.subset[!is.na(women.subset$girls),]
women.subset <- women.subset[!is.na(women.subset$progressive.vote),]
women.subset$republican <- as.factor(women.subset$republican)
# run model
judge_interaction <- glm(progressive.vote ~ girls_atLeast1 * republican,
family=binomial(link="logit"), data = women.subset)
judge_null <- glm(progressive.vote ~ 1,
family=binomial(link="logit"), data = women.subset)
anova(judge_null, judge_interaction, test ="Chisq")
judge_additive <- glm(progressive.vote ~ girls_atLeast1 + republican,
family=binomial(link="logit"), data = women.subset)
anova(judge_additive, judge_interaction, test ="Chisq")
vif(judge_additive)
outlierTest(judge_additive)
pdf("../../graphics/influencePlot_logit.pdf")
influencePlot(judge_additive)
dev.off()
hoslem.test(women.subset$progressive.vote, fitted(judge_additive))
democracy_df <- read.csv("http://faculty.washington.edu/cadolph/panUW/democracy.csv", stringsAsFactors = F)
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c(),  pkgTest)
# set working directory
setwd("~/Documents/GitHub/QTM200Spring2020/problem_sets/PS7")
#####################
# Problem 1
#####################
democracy_df <- read.csv("http://faculty.washington.edu/cadolph/panUW/democracy.csv", stringsAsFactors = F)
View(democracy_df)
which(is.na(democracy_df))
unique(democracy_df[, "COUNTRY"])
unique(democracy_df[, c("COUNTRY", "YEAR")])
aggregate(democracy_df$YEAR, by = list(democracy_df$COUNTRY), max)
max(aggregate(democracy_df$YEAR, by = list(democracy_df$COUNTRY), max)
)
min(aggregate(democracy_df$YEAR, by = list(democracy_df$COUNTRY), max)
)
min(aggregate(democracy_df$YEAR, by = list(democracy_df$COUNTRY), max)[,2])
max(aggregate(democracy_df$YEAR, by = list(democracy_df$COUNTRY), min)[,2])
min(aggregate(democracy_df$YEAR, by = list(democracy_df$COUNTRY), min)[,2])
aggregate(democracy_df$YEAR, by = list(democracy_df$COUNTRY), min)
library("lme4")
library("ggplot2")
library("googleVis")
library("stargazer")
library("sjPlot")
lapply(c("sjPlot"),  pkgTest)
ggplot(democracy_df, aes(x = YEAR, y = GDPW)) +
geom_smooth(method = "lm", se = FALSE) +
geom_point(alpha = 0.3, size = 3) +
theme_bw() +
scale_x_continuous(breaks = 0:9)
lagpanel <- function(x, c, t, lagnum) {
outclass <- "matrix"
if (any(class(x)=="data.frame")) outclass <- "data.frame"
x <- as.matrix(x)
outnames <- colnames(x)
c <- as.matrix(c)
t <- as.matrix(t)
listc <- unique(c)
outmat <- matrix(NA,nrow=nrow(x),ncol=ncol(x))
runningtotal <- 0
for (i in 1:nrow(listc)) {
numtper <- length(unique(t[c==listc[i,]]))
xc <- as.matrix(x[c==listc[i,],])
if (nrow(xc)>numtper)
stop(paste("Duplicate time periods in data for unit", listc[i]))
if (numtper>lagnum) {
outmat[(runningtotal+1+lagnum):(runningtotal + numtper),] <-
xc[1:(nrow(xc)-lagnum),]
}
runningtotal <- runningtotal + numtper
}
if (outclass=="data.frame") outmat <- as.data.frame(outmat)
colnames(outmat) <- outnames
outmat
}
install.packages("googleVis")
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("sjPlot", "googleVis"),  pkgTest)
# set working directory
setwd("~/Documents/GitHub/QTM200Spring2020/problem_sets/PS7")
library("lme4")
library("ggplot2")
library("googleVis")
library("sjPlot")
#####################
# Problem 1
#####################
democracy_df <- read.csv("http://faculty.washington.edu/cadolph/panUW/democracy.csv", stringsAsFactors = F)
ggplot(democracy_df, aes(x = YEAR, y = GDPW)) +
geom_smooth(method = "lm", se = FALSE) +
geom_point(alpha = 0.3, size = 3) + labs(x="\nYear", y="GDP per Capita\n")
theme_bw() +
scale_x_continuous(breaks = 0:9)
library(ggpubr)
ggplot(democracy_df, aes(x = YEAR, y = GDPW)) +
geom_smooth(method = "lm", se = FALSE) +
geom_point(alpha = 0.3, size = 3) + labs(x="\nYear", y="GDP per Capita\n")
ggplot(democracy_df, aes(x = YEAR, y = GDPW)) +
geom_smooth(method = "lm", se = FALSE) +
geom_point(alpha = 0.3, size = 3) + labs(x="\nYear", y="GDP per Capita\n") +
theme_pubr() +
scale_x_continuous(breaks = 0:9)
lagpanel <- function(x, c, t, lagnum) {
outclass <- "matrix"
if (any(class(x)=="data.frame")) outclass <- "data.frame"
x <- as.matrix(x)
outnames <- colnames(x)
c <- as.matrix(c)
t <- as.matrix(t)
listc <- unique(c)
outmat <- matrix(NA,nrow=nrow(x),ncol=ncol(x))
runningtotal <- 0
for (i in 1:nrow(listc)) {
numtper <- length(unique(t[c==listc[i,]]))
xc <- as.matrix(x[c==listc[i,],])
if (nrow(xc)>numtper)
stop(paste("Duplicate time periods in data for unit", listc[i]))
if (numtper>lagnum) {
outmat[(runningtotal+1+lagnum):(runningtotal + numtper),] <-
xc[1:(nrow(xc)-lagnum),]
}
runningtotal <- runningtotal + numtper
}
if (outclass=="data.frame") outmat <- as.data.frame(outmat)
colnames(outmat) <- outnames
outmat
}
# Create lags and differences now to correctly listwise delete
GDPWlag0 <- lagpanel(democracy_df$GDPW,democracy_df$COUNTRY,democracy_df$YEAR,1)
GDPWdiff0 <- democracy_df$GDPW - GDPWlag0
GDPWdifflag0 <- lagpanel(GDPWdiff0,democracy_df$COUNTRY,democracy_df$YEAR,1)
GDPWdifflag20 <- lagpanel(GDPWdiff0,democracy_df$COUNTRY,democracy_df$YEAR,2)
# Listwise delete using only the data we need
selectdata <- na.omit(cbind(democracy_df$COUNTRY,
democracy_df$YEAR,
democracy_df$GDPW,
democracy_df$OIL,
democracy_df$REG,
democracy_df$EDT,
GDPWlag0,
GDPWdiff0,
GDPWdifflag0,
GDPWdifflag20))
selectdata <- as.data.frame(selectdata)
names(selectdata) <- c("COUNTRY","YEAR","GDPW","OIL",
"REG","EDT","GDPWlag","GDPWdiff", "GDPWdifflag", "GDPWdifflag2")
selectdata
names(selectdata) <- c("COUNTRY", "CTYNAME", "YEAR","GDPW","OIL",
"REG","EDT","GDPWlag","GDPWdiff", "GDPWdifflag", "GDPWdifflag2")
# Listwise delete using only the data we need
selectdata <- na.omit(cbind(democracy_df$COUNTRY,
democracy_df$YEAR,
democracy_df$GDPW,
democracy_df$OIL,
democracy_df$REG,
democracy_df$EDT,
GDPWlag0,
GDPWdiff0,
GDPWdifflag0,
GDPWdifflag20))
selectdata <- as.data.frame(selectdata)
names(selectdata) <- c("COUNTRY", "CTYNAME", "YEAR","GDPW","OIL",
"REG","EDT","GDPWlag","GDPWdiff", "GDPWdifflag", "GDPWdifflag2")
# Listwise delete using only the data we need
selectdata <- na.omit(cbind(democracy_df$COUNTRY,
democracy_df$CTYNAME,
democracy_df$YEAR,
democracy_df$GDPW,
democracy_df$OIL,
democracy_df$REG,
democracy_df$EDT,
GDPWlag0,
GDPWdiff0,
GDPWdifflag0,
GDPWdifflag20))
selectdata <- as.data.frame(selectdata)
names(selectdata) <- c("COUNTRY", "CTYNAME", "YEAR","GDPW","OIL",
"REG","EDT","GDPWlag","GDPWdiff", "GDPWdifflag", "GDPWdifflag2")
View(selectdata)
selectdata$GDPWdiff
democracy_df <- read.csv("http://faculty.washington.edu/cadolph/panUW/democracy.csv", stringsAsFactors = F)
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c(),  pkgTest)
# set working directory
setwd("~/Documents/GitHub/QTM200Spring2020/problem_sets/PS6")
#####################
# Problem 1
#####################
cholest <- read.csv("cholesterol.csv", stringsAsFactors = F, header=T)
#####################
# Problem 2
#####################
democracy_df <- read.csv("http://faculty.washington.edu/cadolph/panUW/democracy.csv", stringsAsFactors = F)
pdf("gdp_per_year_PS7.pdf")
ggplot(democracy_df, aes(x = YEAR, y = GDPW)) +
geom_smooth(method = "lm", se = FALSE) +
geom_point(alpha = 0.3, size = 3) + labs(x="\nYear", y="GDP per capita\n") +
theme_pubr() +
scale_x_continuous(breaks = 0:9)
lagpanel <- function(x, c, t, lagnum) {
outclass <- "matrix"
if (any(class(x)=="data.frame")) outclass <- "data.frame"
x <- as.matrix(x)
outnames <- colnames(x)
c <- as.matrix(c)
t <- as.matrix(t)
listc <- unique(c)
outmat <- matrix(NA,nrow=nrow(x),ncol=ncol(x))
runningtotal <- 0
for (i in 1:nrow(listc)) {
numtper <- length(unique(t[c==listc[i,]]))
xc <- as.matrix(x[c==listc[i,],])
if (nrow(xc)>numtper)
stop(paste("Duplicate time periods in data for unit", listc[i]))
if (numtper>lagnum) {
outmat[(runningtotal+1+lagnum):(runningtotal + numtper),] <-
xc[1:(nrow(xc)-lagnum),]
}
runningtotal <- runningtotal + numtper
}
if (outclass=="data.frame") outmat <- as.data.frame(outmat)
colnames(outmat) <- outnames
outmat
}
# Create lags and differences now to correctly listwise delete
GDPWlag0 <- lagpanel(democracy_df$GDPW,democracy_df$COUNTRY,democracy_df$YEAR,1)
GDPWdiff0 <- democracy_df$GDPW - GDPWlag0
GDPWdifflag0 <- lagpanel(GDPWdiff0,democracy_df$COUNTRY,democracy_df$YEAR,1)
GDPWdifflag20 <- lagpanel(GDPWdiff0,democracy_df$COUNTRY,democracy_df$YEAR,2)
# Listwise delete using only the data we need
selectdata <- na.omit(cbind(democracy_df$COUNTRY,
democracy_df$CTYNAME,
democracy_df$YEAR,
democracy_df$GDPW,
democracy_df$OIL,
democracy_df$REG,
democracy_df$EDT,
GDPWlag0,
GDPWdiff0,
GDPWdifflag0,
GDPWdifflag20))
selectdata <- as.data.frame(selectdata)
names(selectdata) <- c("COUNTRY", "CTYNAME", "YEAR","GDPW","OIL",
"REG","EDT","GDPWlag","GDPWdiff", "GDPWdifflag", "GDPWdifflag2")
getwd()
write.csv("~/Downloads/selectdata.csv")
write.csv(selectdata, "~/Downloads/selectdata.csv")
